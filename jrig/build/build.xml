<?xml version="1.0" encoding="UTF-8"?>

<!--
$Id: build.xml,v 1.5 2005/09/10 20:46:57 oone Exp $
-->

<project name="jrig" default="compile" basedir="..">

    <!-- a env.property.sample is checked in for your convenience         -->
    <property file="build/env.properties"/>

    <!-- a build.property.sample is checked in for your convenience       -->
    <property file="build/build.properties"/>

    <!-- defining project related meta data --> 
    <property file="build/project.properties"/>
    
    <taskdef 
        name="junit"
        classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask" />
    
    <!-- ================================================================ -->
    <!-- Defining Project Directories                                     -->
    <!-- ================================================================ -->

    <property name="conf.dir" value="conf" />
    <property name="depcache.dir" value="depcache" />
    <property name="lib.dir" value="lib" />
    <property name="src.dir" value="src" />
    
    <property name="out.dir" value="out" />
    <property name="out.classes.dir" value="${out.dir}/classes" />
    <property name="out.javadoc.dir" value="${out.dir}/javadoc" />
    
    <property name="dist.dir" value="dist" />
    <property name="dist.doc.dir" value="${dist.dir}/doc" />
    <property name="dist.javadoc.dir" value="${dist.doc.dir}/api" />

    <!-- ================================================================ -->
    <!-- Defining Project Properties                                      -->
    <!-- ================================================================ -->

    <property 
        name="jrig.jar" 
        value="${project.name}-${version.major}.${version.minor}.${version.revision}-${version.status}.jar" />
    
    <!-- ================================================================ -->
    <!-- Defining Library Dependency                                      -->
    <!-- ================================================================ -->

    <property name="junit.jar" value="junit-3.8.1.jar" />
    <property name="log4j.jar" value="log4j-1.2.12.jar" />
    <property name="jython.jar" value="jython-2.1.jar" />
   
    <property name="hsqldb.jar" value="hsqldb-1.8.0.2.jar" />
       
    <!-- ================================================================ -->
    <!-- Defining Classpaths                                              -->
    <!-- ================================================================ -->

    <!--
        Minimum liberaries required to run JRIG. 
        Those libraries are included in JRIG binary distribution.
    -->
    <path id="classpath.dist">
        <fileset dir="${lib.dir}">
            <include name="${jython.jar}" />
            <include name="${log4j.jar}" />
        </fileset>
    </path>
    
    <!--
       Minimum liberaries required to compile JRIG, including unit test.
    -->
    <path id="classpath.compile">
        <path refid="classpath.dist" />

        <fileset dir="${lib.dir}">
            <include name="${junit.jar}" />
        </fileset>
    </path>

    <!--
        Classpath required to run unit test.
    -->
    <path id="classpath.test">
        <path refid="classpath.compile" />

        <fileset dir="${lib.dir}" >
            <include name="${hsqldb.jar}" />
        </fileset>

        <pathelement location="${conf.dir}" />
        <pathelement location="${out.classes.dir}" />
    </path>

    <!-- ================================================================ -->
    <!-- Development Related Targets                                      -->
    <!-- ================================================================ -->
    
    <target 
        name="unittest"
        description="Running unit test"
        depends="compile">

        <junit 
            printsummary="yes"
            haltonfailure="yes"
            fork="true" maxmemory="256m">

            <formatter type="brief" usefile="true"/>
            <classpath refid="classpath.test" />

            <batchtest>
                <fileset dir="${out.classes.dir}">
                    <include name="**/*Test.class" />    
                </fileset>
            </batchtest>     
        </junit>
    </target>

    <target 
        name="jar"
        description="Create jrig binary jar"
        depends="clean, compile">

        <copy todir="${out.classes.dir}" >
            <fileset dir="${conf.dir}">
                <include name="*.xml" />
                <include name="*.properties" /> 
            </fileset>
        </copy>

        <jar jarfile="${out.dir}/${jrig.jar}"
            basedir="${out.classes.dir}">
            <exclude name="**/*Test.class" />
        </jar>
    </target>

    <target 
        name="compile"
        description="Compile"
        depends="-prepare.compile">

        <javac 
            srcdir="${src.dir}"
            destdir="${out.classes.dir}"
            debug="${debug}"
            deprecation="${deprecation}"
            source="1.4">

            <include name="**/*.java" />
            <classpath refid="classpath.compile" />
        </javac>
        
        <!-- substitute project version -->
        <copy 
            todir="${out.classes.dir}"
            overwrite="true">
            <fileset dir="${src.dir}" includes="**/version.properties"/>
            <filterset>
                <filter token="version.major" value="${version.major}"/>
                <filter token="version.minor" value="${version.minor}"/>
                <filter token="version.revision" value="${version.revision}"/>
                <filter token="version.status" value="${version.status}"/>
            </filterset>
        </copy>
        
        <copy todir="${out.classes.dir}">
            <fileset dir="${src.dir}">
                <include name="**/*.xml" />
                <include name="**/*.properties" />
                <exclude name="**/version.properties" />
            </fileset>
        </copy>
    </target>
    
    <target 
        name="-prepare.compile"
        description="Check for out-of-date class files">

        <delete dir="${out.dir}" />
        <mkdir dir="${out.classes.dir}" />

        <depend 
            srcdir="${src.dir}"
            destdir="${out.classes.dir}"
            cache="${depcache.dir}"
            closure="yes"/>
    </target>
   
    <target
        name="javadoc"
        description="Generate Javadoc">

         <delete dir="${out.javadoc.dir}" />
         <mkdir dir="${out.javadoc.dir}" />

         <javadoc
             packagenames="de.berlios.jrig.**.*"
             sourcepath="${src.dir}"
             destdir="${out.javadoc.dir}"
             source="1.4"/>
    </target>
    
    <target 
        name="clean"
        description="Clean generated artifacts">
        <!-- Remove the out directory -->
        <delete dir="${out.dir}"/>

        <!-- Remove the dist directory -->
        <delete dir="${dist.dir}"/>
    </target>
    
    <target name="cleanall" 
        description="clean all generated artifacts"
        depends="clean">
        
        <!-- Deletes all backup files -->
        <delete dir="${depcache.dir}"/>
    </target>
</project>
